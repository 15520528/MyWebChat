{"ast":null,"code":"import _classCallCheck from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lap11105-local/Documents/My repos/Id_1/app-design/src/components/Messages/Message.js\";\nimport React, { Component } from 'react';\nimport { Avatar, Layout } from 'antd';\nimport qoobee from \"../../images/qoobee.jpg\";\nimport '../../css/Messages/messages.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport connect from \"react-redux/es/connect/connect\";\nimport { ChatActions } from '../../Redux/Actions/ChatActions';\nvar Header = Layout.Header,\n    Footer = Layout.Footer;\nvar headerStyle = {\n  height: '100px',\n  backgroundColor: 'white',\n  borderBottom: '1px solid #ebebe0 ',\n  padding: '10px'\n};\nvar footerStyle = {\n  height: '80px',\n  backgroundColor: 'white',\n  borderTop: '1px solid #ebebe0 ',\n  padding: '0px'\n};\nvar ChatName = {\n  marginTop: '-70px',\n  marginLeft: '85px'\n};\nvar typeCauseScroll = false;\nvar pullCauseScroll = false;\nvar checkedConversations = [];\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message(props) {\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n\n    _this.typeText = function (event) {\n      // let code = (event.keyCode ? event.keyCode : event.which);\n      if (event.keyCode === 13 && !event.shiftKey) {\n        var message = event.target.value;\n        var temptMessages = _this.state.messages;\n        temptMessages.push({\n          id: \"4\",\n          sender: 'Nam',\n          type: 'sent',\n          message: message\n        });\n\n        _this.setState({\n          messages: temptMessages\n        });\n\n        typeCauseScroll = true;\n        pullCauseScroll = false; // event.target.value = null;\n        //send message to service API\n\n        _this.props.websocket.send(message);\n\n        document.getElementById('textArea').value = \"\";\n      }\n    };\n\n    _this.displayMessages = function () {\n      var messages = _this.state.currentMessages.map(function (item) {\n        return React.createElement(\"li\", {\n          className: item.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"http://emilcarlsson.se/assets/mikeross.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, item.message));\n      });\n\n      return messages;\n    };\n\n    _this.onMessageScroll = function (event) {\n      var messageBoard = document.getElementById('messages'); // console.log(e.scrollTop);\n\n      if (messageBoard.scrollTop === 0) {\n        alert(\"End\");\n        var messages = [{\n          id: \"1\",\n          sender: 'Nam',\n          type: 'sent',\n          message: \"Nà ní\"\n        }, {\n          id: \"2\",\n          sender: 'BigBid',\n          type: 'replies',\n          message: \"nà ní 2\"\n        }, {\n          id: \"3\",\n          sender: 'Nam',\n          type: 'sent',\n          message: \"nà ní 2\"\n        }];\n\n        _this.appendMessages(messages);\n\n        typeCauseScroll = false;\n        pullCauseScroll = true; // messageBoard.scroll(0, 100);\n      }\n    };\n\n    _this.appendMessages = function (messages) {\n      var temptMessages = messages.concat(_this.state.messages); // temptMessages.concat(this.state.messages);\n      // console.log(temptMessages);\n\n      _this.setState({\n        messages: temptMessages\n      }); // this.state.\n      // console.log(this.state.messages);\n\n    };\n\n    _this.state = {\n      websocket: '',\n      currentMessages: [{\n        id: \"1\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"bạn ăn cơm chưa\"\n      }, {\n        id: \"2\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"chưa\"\n      }, {\n        id: \"3\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"Bạn ăn cơm vs gì?\"\n      }, {\n        id: \"4\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"Cá\"\n      }, {\n        id: \"3\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"1\"\n      }, {\n        id: \"4\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"2\"\n      }, {\n        id: \"3\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"3\"\n      }, {\n        id: \"4\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"4\"\n      }, {\n        id: \"3\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"5\"\n      }, {\n        id: \"4\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"6\"\n      }],\n      allMessages: []\n    };\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (typeCauseScroll) {\n        // console.log(prevState.messages);\n        var messageBoard = document.getElementById('messages');\n        messageBoard.scroll(0, messageBoard.scrollHeight);\n        typeCauseScroll = false;\n        pullCauseScroll = false;\n      } else if (pullCauseScroll) {\n        // console.log(prevState.messages);\n        var _messageBoard = document.getElementById('messages');\n\n        _messageBoard.scroll(0, 20);\n\n        typeCauseScroll = false;\n        pullCauseScroll = false;\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.currentConversationId != this.props.currentConversationId && !checkedConversations.includes(nextProps.currentConversationId)) {\n        // console.log(\"selected chatId \", nextProps.currentConversationId);\n        this.props.getMessage(nextProps.currentConversationId, 0);\n        checkedConversations.push(nextProps.currentConversationId);\n      }\n\n      if (nextProps.message != this.props.message) {\n        console.log(\"success \", nextProps.message);\n      } else {}\n\n      console.log(checkedConversations);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        style: {\n          borderLeft: \"1px solid #ebebe0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: headerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        size: 80,\n        src: qoobee,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        style: ChatName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Ms. QooBee\")), React.createElement(\"div\", {\n        className: \"messages\",\n        onScroll: this.onMessageScroll,\n        id: \"messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.displayMessages())), React.createElement(Footer, {\n        style: footerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"textArea\",\n        style: {\n          backgroundColor: 'pink'\n        },\n        placeholder: \"Write your message... \",\n        onKeyDown: this.typeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"tool\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: this.typeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-paper-plane\",\n        style: {\n          fontSize: '24px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentConversationId: state.chatReducer.conversationId,\n    websocket: state.socketReducer.websocket,\n    message: state.chatReducer.message\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getMessage: function getMessage(conversationId, index) {\n      return dispatch(ChatActions.get_Message(conversationId, index));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);","map":{"version":3,"sources":["/home/lap11105-local/Documents/My repos/Id_1/app-design/src/components/Messages/Message.js"],"names":["React","Component","Avatar","Layout","qoobee","connect","ChatActions","Header","Footer","headerStyle","height","backgroundColor","borderBottom","padding","footerStyle","borderTop","ChatName","marginTop","marginLeft","typeCauseScroll","pullCauseScroll","checkedConversations","Message","props","typeText","event","keyCode","shiftKey","message","target","value","temptMessages","state","messages","push","id","sender","type","setState","websocket","send","document","getElementById","displayMessages","currentMessages","map","item","onMessageScroll","messageBoard","scrollTop","alert","appendMessages","concat","allMessages","prevProps","prevState","snapshot","scroll","scrollHeight","nextProps","nextContext","currentConversationId","includes","getMessage","console","log","borderLeft","fontSize","mapStateToProps","chatReducer","conversationId","socketReducer","mapDispatchToProps","dispatch","index","get_Message"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Avatar, Layout} from 'antd';\nimport qoobee from \"../../images/qoobee.jpg\";\nimport '../../css/Messages/messages.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport connect from \"react-redux/es/connect/connect\";\nimport {ChatActions} from '../../Redux/Actions/ChatActions';\n\nconst {\n    Header, Footer,\n} = Layout;\n\nconst headerStyle = {\n    height: '100px', backgroundColor: 'white', borderBottom: '1px solid #ebebe0 ', padding: '10px'\n}\n\nconst footerStyle = {\n    height: '80px', backgroundColor: 'white', borderTop: '1px solid #ebebe0 ', padding: '0px'\n}\n\nconst ChatName = {\n    marginTop: '-70px', marginLeft: '85px'\n}\n\nvar typeCauseScroll = false\nvar pullCauseScroll = false\n\nvar checkedConversations = [];\n\nclass Message extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            websocket: '',\n            currentMessages: [\n                {\n                    id: \"1\",\n                    sender: 'Nam',\n                    type: 'sent',\n                    message: \"bạn ăn cơm chưa\"\n                },\n                {\n                    id: \"2\",\n                    sender: 'BigBid',\n                    type: 'replies',\n                    message: \"chưa\"\n                },\n                {\n                    id: \"3\",\n                    sender: 'Nam',\n                    type: 'sent',\n                    message: \"Bạn ăn cơm vs gì?\"\n                },\n                {\n                    id: \"4\",\n                    sender: 'BigBid',\n                    type: 'replies',\n                    message: \"Cá\"\n                },\n                {\n                    id: \"3\",\n                    sender: 'Nam',\n                    type: 'sent',\n                    message: \"1\"\n                },\n                {\n                    id: \"4\",\n                    sender: 'BigBid',\n                    type: 'replies',\n                    message: \"2\"\n                }, {\n                    id: \"3\",\n                    sender: 'Nam',\n                    type: 'sent',\n                    message: \"3\"\n                },\n                {\n                    id: \"4\",\n                    sender: 'BigBid',\n                    type: 'replies',\n                    message: \"4\"\n                }, {\n                    id: \"3\",\n                    sender: 'Nam',\n                    type: 'sent',\n                    message: \"5\"\n                },\n                {\n                    id: \"4\",\n                    sender: 'BigBid',\n                    type: 'replies',\n                    message: \"6\"\n                },\n            ],\n            allMessages:[],\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (typeCauseScroll) {\n            // console.log(prevState.messages);\n            let messageBoard = document.getElementById('messages');\n            messageBoard.scroll(0, messageBoard.scrollHeight);\n            typeCauseScroll = false;\n            pullCauseScroll = false;\n        }\n        else if (pullCauseScroll) {\n            // console.log(prevState.messages);\n            let messageBoard = document.getElementById('messages');\n            messageBoard.scroll(0, 20);\n            typeCauseScroll = false;\n            pullCauseScroll = false;\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.currentConversationId != this.props.currentConversationId\n            && !checkedConversations.includes(nextProps.currentConversationId)\n        ) {\n            // console.log(\"selected chatId \", nextProps.currentConversationId);\n            this.props.getMessage(nextProps.currentConversationId, 0);\n            checkedConversations.push(nextProps.currentConversationId);\n        }\n        if(nextProps.message != this.props.message){\n            console.log(\"success \", nextProps.message);\n        }\n        else{\n\n        }\n        console.log(checkedConversations);\n    }\n\n    typeText = (event) => {\n        // let code = (event.keyCode ? event.keyCode : event.which);\n        if (event.keyCode === 13 && !event.shiftKey) {\n            let message = event.target.value;\n            let temptMessages = this.state.messages;\n            temptMessages.push({\n                id: \"4\",\n                sender: 'Nam',\n                type: 'sent',\n                message: message\n            });\n            this.setState({messages: temptMessages});\n            typeCauseScroll = true;\n            pullCauseScroll = false;\n            // event.target.value = null;\n            //send message to service API\n            this.props.websocket.send(message);\n            document.getElementById('textArea').value = \"\";\n        }\n    }\n\n\n    displayMessages = () => {\n        const messages = this.state.currentMessages.map((item) =>\n            <li className={item.type}>\n                <img src=\"http://emilcarlsson.se/assets/mikeross.png\" alt=\"\"/>\n                <p>{item.message}</p>\n            </li>\n        );\n        return messages;\n    }\n\n    onMessageScroll = (event) => {\n        let messageBoard = document.getElementById('messages');\n        // console.log(e.scrollTop);\n        if (messageBoard.scrollTop === 0) {\n            alert(\"End\");\n            let messages = [\n                {\n                    id: \"1\",\n                    sender: 'Nam',\n                    type: 'sent',\n                    message: \"Nà ní\"\n                },\n                {\n                    id: \"2\",\n                    sender: 'BigBid',\n                    type: 'replies',\n                    message: \"nà ní 2\"\n                },\n                {\n                    id: \"3\",\n                    sender: 'Nam',\n                    type: 'sent',\n                    message: \"nà ní 2\"\n                }];\n            this.appendMessages(messages);\n            typeCauseScroll = false;\n            pullCauseScroll = true;\n            // messageBoard.scroll(0, 100);\n        }\n    }\n\n    appendMessages = (messages) => {\n        let temptMessages = messages.concat(this.state.messages);\n        // temptMessages.concat(this.state.messages);\n        // console.log(temptMessages);\n        this.setState({messages: temptMessages});\n        // this.state.\n        // console.log(this.state.messages);\n    }\n\n\n    render() {\n        return (\n            <Layout style={{borderLeft: \"1px solid #ebebe0\"}}>\n                <Header style={headerStyle}>\n                    <Avatar size={80} src={qoobee}/>\n                    <h3 style={ChatName}>Ms. QooBee</h3>\n                </Header>\n                <div className=\"messages\" onScroll={this.onMessageScroll} id=\"messages\">\n                    <ul>\n                        {this.displayMessages()}\n                    </ul>\n                </div>\n\n                <Footer style={footerStyle}>\n                    <div className=\"message-input\">\n                        <div className=\"wrap\">\n                            <form>\n                                <textarea id=\"textArea\" style={{backgroundColor: 'pink'}}\n                                          placeholder=\"Write your message... \" onKeyDown={this.typeText}></textarea>\n                            </form>\n                            <div className=\"tool\">\n                                <button className=\"submit\" onClick={this.typeText}><i className=\"fa fa-paper-plane\"\n                                                                                      style={{fontSize: '24px'}}></i>\n                                </button>\n                            </div>\n\n                        </div>\n                    </div>\n                </Footer>\n\n            </Layout>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentConversationId: state.chatReducer.conversationId,\n        websocket: state.socketReducer.websocket,\n        message:state.chatReducer.message,\n    }\n};\nconst mapDispatchToProps = (dispatch) => ({\n    getMessage: (conversationId, index) => dispatch(ChatActions.get_Message(conversationId, index)),\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Message);"]},"metadata":{},"sourceType":"module"}