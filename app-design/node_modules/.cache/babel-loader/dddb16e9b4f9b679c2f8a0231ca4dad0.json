{"ast":null,"code":"import { Actions } from '../Constants/Constants';\nimport { ChatService } from '../../Services/ChatService';\nimport { applyMiddleware as dispatch } from \"redux\";\n\nfunction fetch_ConversationID(conversationId) {\n  return {\n    type: Actions.CHAT_ID_FETCHING,\n    conversationId: conversationId\n  };\n}\n\nfunction get_Message(conversationId, index) {\n  return function (dispatch) {\n    return ChatService.getMessages(conversationId).then(function (message) {\n      console.log('message ', message); // dispatch(success(message));\n    }).catch(function (error) {});\n  };\n\n  function success(message) {\n    return {\n      type: Actions.CHAT_MESSAGE_SUCCESS_GET,\n      message: message\n    };\n  }\n}\n\nexport var ChatActions = {\n  fetch_ConversationID: fetch_ConversationID,\n  get_Message: get_Message\n};","map":{"version":3,"sources":["/home/lap11105-local/Documents/My repos/Id_1/app-design/src/Redux/Actions/ChatActions.js"],"names":["Actions","ChatService","applyMiddleware","dispatch","fetch_ConversationID","conversationId","type","CHAT_ID_FETCHING","get_Message","index","getMessages","then","message","console","log","catch","error","success","CHAT_MESSAGE_SUCCESS_GET","ChatActions"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,wBAAtB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAAQC,eAAe,IAAIC,QAA3B,QAA0C,OAA1C;;AAEA,SAASC,oBAAT,CAA8BC,cAA9B,EAA8C;AAC1C,SAAO;AAACC,IAAAA,IAAI,EAAEN,OAAO,CAACO,gBAAf;AAAiCF,IAAAA,cAAc,EAAEA;AAAjD,GAAP;AACH;;AAED,SAASG,WAAT,CAAqBH,cAArB,EAAqCI,KAArC,EAA2C;AAEnC,SAAO,UAAAN,QAAQ;AAAA,WAAIF,WAAW,CAACS,WAAZ,CAAwBL,cAAxB,EACdM,IADc,CACT,UAAAC,OAAO,EAAE;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,OAAvB,EADO,CAEP;AACH,KAJU,EAKdG,KALc,CAKR,UAAAC,KAAK,EAAE,CAEb,CAPc,CAAJ;AAAA,GAAf;;AAQJ,WAASC,OAAT,CAAiBL,OAAjB,EAA0B;AAAE,WAAO;AAAEN,MAAAA,IAAI,EAAEN,OAAO,CAACkB,wBAAhB;AAA0CN,MAAAA,OAAO,EAACA;AAAlD,KAAP;AAAmE;AAClG;;AAED,OAAO,IAAMO,WAAW,GAAG;AACvBf,EAAAA,oBAAoB,EAApBA,oBADuB;AAEvBI,EAAAA,WAAW,EAAXA;AAFuB,CAApB","sourcesContent":["import {Actions} from '../Constants/Constants';\nimport {ChatService} from '../../Services/ChatService';\nimport {applyMiddleware as dispatch} from \"redux\";\n\nfunction fetch_ConversationID(conversationId) {\n    return {type: Actions.CHAT_ID_FETCHING, conversationId: conversationId};\n}\n\nfunction get_Message(conversationId, index){\n\n        return dispatch => ChatService.getMessages(conversationId)\n            .then(message=>{\n                    console.log('message ',message);\n                    // dispatch(success(message));\n                })\n            .catch(error=>{\n\n            });\n    function success(message) { return { type: Actions.CHAT_MESSAGE_SUCCESS_GET, message:message} }\n}\n\nexport const ChatActions = {\n    fetch_ConversationID,\n    get_Message,\n};"]},"metadata":{},"sourceType":"module"}