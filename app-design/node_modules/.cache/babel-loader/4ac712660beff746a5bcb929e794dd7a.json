{"ast":null,"code":"import _classCallCheck from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lap11105-local/Documents/My repos/Id_1/app-design/src/components/Messages/Message.js\";\nimport React, { Component } from 'react';\nimport { Avatar, Layout } from 'antd';\nimport qoobee from \"../../images/qoobee.jpg\";\nimport '../../css/Messages/messages.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport connect from \"react-redux/es/connect/connect\";\nvar Header = Layout.Header,\n    Footer = Layout.Footer;\nvar headerStyle = {\n  height: '100px',\n  backgroundColor: 'white',\n  borderBottom: '1px solid #ebebe0 ',\n  padding: '10px'\n};\nvar footerStyle = {\n  height: '80px',\n  backgroundColor: 'white',\n  borderTop: '1px solid #ebebe0 ',\n  padding: '0px'\n};\nvar ChatName = {\n  marginTop: '-70px',\n  marginLeft: '85px'\n};\nvar typeCauseScroll = false;\nvar pullCauseScroll = false;\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message(props) {\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n\n    _this.typeText = function (event) {\n      // let code = (event.keyCode ? event.keyCode : event.which);\n      if (event.keyCode === 13 && !event.shiftKey) {\n        var message = event.target.value;\n        var temptMessages = _this.state.messages;\n        temptMessages.push({\n          id: \"4\",\n          sender: 'Nam',\n          type: 'sent',\n          message: message\n        });\n\n        _this.setState({\n          messages: temptMessages\n        });\n\n        typeCauseScroll = true;\n        pullCauseScroll = false; // event.target.value = null;\n        //send message to service API\n\n        _this.props.websocket.send(message);\n\n        document.getElementById('textArea').value = \"\";\n      }\n    };\n\n    _this.displayMessages = function () {\n      var messages = _this.state.messages.map(function (item) {\n        return React.createElement(\"li\", {\n          className: item.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"http://emilcarlsson.se/assets/mikeross.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, item.message));\n      });\n\n      return messages;\n    };\n\n    _this.onMessageScroll = function (event) {\n      var messageBoard = document.getElementById('messages'); // console.log(e.scrollTop);\n\n      if (messageBoard.scrollTop === 0) {\n        alert(\"End\");\n        var messages = [{\n          id: \"1\",\n          sender: 'Nam',\n          type: 'sent',\n          message: \"Nà ní\"\n        }, {\n          id: \"2\",\n          sender: 'BigBid',\n          type: 'replies',\n          message: \"nà ní 2\"\n        }, {\n          id: \"3\",\n          sender: 'Nam',\n          type: 'sent',\n          message: \"nà ní 2\"\n        }];\n\n        _this.appendMessages(messages);\n\n        typeCauseScroll = false;\n        pullCauseScroll = true; // messageBoard.scroll(0, 100);\n      }\n    };\n\n    _this.appendMessages = function (messages) {\n      var temptMessages = messages.concat(_this.state.messages); // temptMessages.concat(this.state.messages);\n      // console.log(temptMessages);\n\n      _this.setState({\n        messages: temptMessages\n      }); // this.state.\n      // console.log(this.state.messages);\n\n    };\n\n    _this.state = {\n      websocket: '',\n      messages: [{\n        id: \"1\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"bạn ăn cơm chưa\"\n      }, {\n        id: \"2\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"chưa\"\n      }, {\n        id: \"3\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"Bạn ăn cơm vs gì?\"\n      }, {\n        id: \"4\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"Cá\"\n      }, {\n        id: \"3\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"1\"\n      }, {\n        id: \"4\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"2\"\n      }, {\n        id: \"3\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"3\"\n      }, {\n        id: \"4\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"4\"\n      }, {\n        id: \"3\",\n        sender: 'Nam',\n        type: 'sent',\n        message: \"5\"\n      }, {\n        id: \"4\",\n        sender: 'BigBid',\n        type: 'replies',\n        message: \"6\"\n      }],\n      allMessages: [{}, {}, {}, {}, {}]\n    };\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (typeCauseScroll) {\n        // console.log(prevState.messages);\n        var messageBoard = document.getElementById('messages');\n        messageBoard.scroll(0, messageBoard.scrollHeight);\n      }\n\n      if (pullCauseScroll) {\n        // console.log(prevState.messages);\n        var _messageBoard = document.getElementById('messages');\n\n        _messageBoard.scroll(0, 20);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.conversationId != this.props.conversationId) {\n        console.log(\"selected chatId \", nextProps.conversationId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        style: {\n          borderLeft: \"1px solid #ebebe0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: headerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        size: 80,\n        src: qoobee,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        style: ChatName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Ms. QooBee\")), React.createElement(\"div\", {\n        className: \"messages\",\n        onScroll: this.onMessageScroll,\n        id: \"messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, this.displayMessages())), React.createElement(Footer, {\n        style: footerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"textArea\",\n        style: {\n          backgroundColor: 'pink'\n        },\n        placeholder: \"Write your message... \",\n        onKeyDown: this.typeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"tool\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: this.typeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-paper-plane\",\n        style: {\n          fontSize: '24px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    conversationId: state.chatReducer.conversationId,\n    websocket: state.socketReducer.websocket\n  };\n};\n\nexport default connect(mapStateToProps)(Message);","map":{"version":3,"sources":["/home/lap11105-local/Documents/My repos/Id_1/app-design/src/components/Messages/Message.js"],"names":["React","Component","Avatar","Layout","qoobee","connect","Header","Footer","headerStyle","height","backgroundColor","borderBottom","padding","footerStyle","borderTop","ChatName","marginTop","marginLeft","typeCauseScroll","pullCauseScroll","Message","props","typeText","event","keyCode","shiftKey","message","target","value","temptMessages","state","messages","push","id","sender","type","setState","websocket","send","document","getElementById","displayMessages","map","item","onMessageScroll","messageBoard","scrollTop","alert","appendMessages","concat","allMessages","prevProps","prevState","snapshot","scroll","scrollHeight","nextProps","nextContext","conversationId","console","log","borderLeft","fontSize","mapStateToProps","chatReducer","socketReducer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Avatar, Layout} from 'antd';\nimport qoobee from \"../../images/qoobee.jpg\";\nimport '../../css/Messages/messages.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport connect from \"react-redux/es/connect/connect\";\n\nconst {\n    Header, Footer,\n} = Layout;\n\nconst headerStyle = {\n    height: '100px', backgroundColor: 'white', borderBottom: '1px solid #ebebe0 ', padding: '10px'\n}\n\nconst footerStyle = {\n    height: '80px', backgroundColor: 'white', borderTop: '1px solid #ebebe0 ', padding: '0px'\n}\n\nconst ChatName = {\n    marginTop: '-70px', marginLeft: '85px'\n}\n\nvar typeCauseScroll=false\nvar pullCauseScroll=false\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            websocket:'',\n            messages:[\n                {   id:\"1\",\n                    sender:'Nam',\n                    type:'sent',\n                    message:\"bạn ăn cơm chưa\"\n                },\n                {\n                    id:\"2\",\n                    sender:'BigBid',\n                    type:'replies',\n                    message:\"chưa\"\n                },\n                {\n                    id:\"3\",\n                    sender:'Nam',\n                    type:'sent',\n                    message:\"Bạn ăn cơm vs gì?\"\n                },\n                {\n                    id:\"4\",\n                    sender:'BigBid',\n                    type:'replies',\n                    message:\"Cá\"\n                },\n                {\n                    id:\"3\",\n                    sender:'Nam',\n                    type:'sent',\n                    message:\"1\"\n                },\n                {\n                    id:\"4\",\n                    sender:'BigBid',\n                    type:'replies',\n                    message:\"2\"\n                },{\n                    id:\"3\",\n                    sender:'Nam',\n                    type:'sent',\n                    message:\"3\"\n                },\n                {\n                    id:\"4\",\n                    sender:'BigBid',\n                    type:'replies',\n                    message:\"4\"\n                },{\n                    id:\"3\",\n                    sender:'Nam',\n                    type:'sent',\n                    message:\"5\"\n                },\n                {\n                    id:\"4\",\n                    sender:'BigBid',\n                    type:'replies',\n                    message:\"6\"\n                },\n            ],\n            allMessages:[\n                {},\n                {},\n                {},\n                {},\n                {},\n            ],\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(typeCauseScroll) {\n            // console.log(prevState.messages);\n            let messageBoard = document.getElementById('messages');\n            messageBoard.scroll(0, messageBoard.scrollHeight);\n        }\n        if(pullCauseScroll){\n            // console.log(prevState.messages);\n            let messageBoard = document.getElementById('messages');\n            messageBoard.scroll(0, 20);\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.conversationId != this.props.conversationId) {\n            console.log(\"selected chatId \", nextProps.conversationId);\n        }\n    }\n\n    typeText = (event)=>{\n            // let code = (event.keyCode ? event.keyCode : event.which);\n        if(event.keyCode === 13 && !event.shiftKey) {\n            let message = event.target.value;\n            let temptMessages = this.state.messages;\n            temptMessages.push({\n                id:\"4\",\n                sender:'Nam',\n                type: 'sent',\n                message: message\n            });\n            this.setState({messages: temptMessages});\n            typeCauseScroll = true;\n            pullCauseScroll = false;\n            // event.target.value = null;\n            //send message to service API\n            this.props.websocket.send(message);\n            document.getElementById('textArea').value = \"\";\n        }\n    }\n\n\n    displayMessages=()=>{\n        const messages = this.state.messages.map((item)=>\n            <li className={item.type}>\n                <img src=\"http://emilcarlsson.se/assets/mikeross.png\" alt=\"\"/>\n                <p>{item.message}</p>\n            </li>\n        );\n        return messages;\n    }\n\n    onMessageScroll = (event) => {\n        let messageBoard = document.getElementById('messages');\n        // console.log(e.scrollTop);\n        if(messageBoard.scrollTop  === 0)\n        {\n            alert(\"End\");\n            let messages =[\n                {   id:\"1\",\n                    sender:'Nam',\n                    type:'sent',\n                    message:\"Nà ní\"\n                },\n                {\n                    id:\"2\",\n                    sender:'BigBid',\n                    type:'replies',\n                    message:\"nà ní 2\"\n                },\n                {\n                    id:\"3\",\n                    sender:'Nam',\n                    type:'sent',\n                    message:\"nà ní 2\"\n                }];\n            this.appendMessages(messages);\n            typeCauseScroll = false;\n            pullCauseScroll = true;\n            // messageBoard.scroll(0, 100);\n        }\n    }\n\n    appendMessages=(messages)=>{\n        let temptMessages = messages.concat(this.state.messages);\n        // temptMessages.concat(this.state.messages);\n        // console.log(temptMessages);\n        this.setState({messages: temptMessages});\n        // this.state.\n        // console.log(this.state.messages);\n    }\n\n\n    render() {\n        return (\n            <Layout style={{borderLeft: \"1px solid #ebebe0\"}} >\n                <Header style={headerStyle}>\n                    <Avatar size={80} src={qoobee}/>\n                    <h3 style={ChatName}>Ms. QooBee</h3>\n                </Header>\n                <div className=\"messages\" onScroll={this.onMessageScroll} id=\"messages\">\n                    <ul >\n                        {this.displayMessages()}\n                    </ul>\n                </div>\n\n                <Footer style={footerStyle}>\n                    <div className=\"message-input\">\n                        <div className=\"wrap\">\n                            <form>\n                                <textarea id=\"textArea\" style={{backgroundColor:'pink'}} placeholder=\"Write your message... \"  onKeyDown={this.typeText}></textarea>\n                            </form>\n                            <div className=\"tool\">\n                                <button className=\"submit\" onClick={this.typeText}><i className=\"fa fa-paper-plane\" style={{fontSize:'24px'}}></i></button>\n                            </div>\n\n                        </div>\n                    </div>\n                </Footer>\n\n            </Layout>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        conversationId: state.chatReducer.conversationId,\n        websocket: state.socketReducer.websocket,\n    }\n};\nexport default connect(\n    mapStateToProps,\n)( Message);"]},"metadata":{},"sourceType":"module"}