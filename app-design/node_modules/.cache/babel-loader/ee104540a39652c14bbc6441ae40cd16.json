{"ast":null,"code":"import _regeneratorRuntime from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Actions } from '../Constants/Constants';\nimport { UserService } from '../../Services/UserService';\nimport { createBrowserHistory } from 'history';\nvar history = createBrowserHistory();\n\nfunction login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(username, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            UserService.login(username, password); //     .then(\n            //     user => {\n            //         // dispatch(success(user));\n            //         history.push('/');\n            //         console.log('success');\n            //     },\n            //     error => {\n            //         console.log('fail');\n            //         // dispatch(failure(error));\n            //         // dispatch(alertActions.error(error));\n            //     }\n            // );\n\n            console.log('done log');\n            return _context.abrupt(\"return\", {\n              type: Actions.USERLOGIN\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction logout() {\n  UserService.logout(); // return { type: Actions.USERLOGOUT};\n}\n\nexport var UserActions = {\n  login: login,\n  logout: logout\n};","map":{"version":3,"sources":["/home/lap11105-local/Documents/My repos/Id_1/app-design/src/Redux/Actions/UserActions.js"],"names":["Actions","UserService","createBrowserHistory","history","login","username","password","console","log","type","USERLOGIN","logout","UserActions"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,wBAAtB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,IAAIC,OAAO,GAAGD,oBAAoB,EAAlC;;SACeE,K;;;;;;;2BAAf,iBAAqBC,QAArB,EAA+BC,QAA/B;AAAA;AAAA;AAAA;AAAA;AACQL,YAAAA,WAAW,CAACG,KAAZ,CAAkBC,QAAlB,EAA4BC,QAA5B,EADR,CAEQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAdR,6CAee;AAAEC,cAAAA,IAAI,EAAET,OAAO,CAACU;AAAhB,aAff;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBA,SAASC,MAAT,GAAkB;AACVV,EAAAA,WAAW,CAACU,MAAZ,GADU,CAEV;AACP;;AAED,OAAO,IAAMC,WAAW,GAAG;AACvBR,EAAAA,KAAK,EAALA,KADuB;AAEvBO,EAAAA,MAAM,EAANA;AAFuB,CAApB","sourcesContent":["import {Actions} from '../Constants/Constants';\nimport {UserService} from '../../Services/UserService';\nimport { createBrowserHistory } from 'history';\n\nvar history = createBrowserHistory();\nasync function login(username, password) {\n        UserService.login(username, password);\n        //     .then(\n        //     user => {\n        //         // dispatch(success(user));\n        //         history.push('/');\n        //         console.log('success');\n        //     },\n        //     error => {\n        //         console.log('fail');\n        //         // dispatch(failure(error));\n        //         // dispatch(alertActions.error(error));\n        //     }\n        // );\n        console.log('done log');\n        return { type: Actions.USERLOGIN};\n}\n\nfunction logout() {\n        UserService.logout();\n        // return { type: Actions.USERLOGOUT};\n}\n\nexport const UserActions = {\n    login,\n    logout\n};"]},"metadata":{},"sourceType":"module"}