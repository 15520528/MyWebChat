{"ast":null,"code":"import _classCallCheck from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lap11105-local/Documents/My repos/Id_1/app-design/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lap11105-local/Documents/My repos/Id_1/app-design/src/components/Conversations/Conversations.js\";\nimport React, { Component } from 'react';\nimport { Layout, Menu, Avatar } from 'antd';\nimport qoobee from \"../../images/qoobee.jpg\";\nimport '../../css/Conversations/conversation.css';\nimport { ChatActions } from \"../../Redux/Actions/ChatActions\";\nimport { connect } from 'react-redux';\n\nvar Conversations =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Conversations, _Component);\n\n  function Conversations(props) {\n    var _this;\n\n    _classCallCheck(this, Conversations);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Conversations).call(this, props));\n\n    _this.showMessage = function (chat) {\n      // alert(chat.key);\n      _this.props.FetchChatId(chat.key);\n    };\n\n    _this.state = {\n      ConversationsMap: [{\n        id: \"1\",\n        chatName: \"Tâm sự với em\"\n      }, {\n        id: \"3\",\n        chatName: \"Hội yêu cún\"\n      }, {\n        id: \"8\",\n        chatName: \"Hội yêu mèo\"\n      }, {\n        id: \"11\",\n        chatName: \"Bộ tộc Golden\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Conversations, [{\n    key: \"showConversations\",\n    value: function showConversations() {\n      var menuItems = this.state.ConversationsMap.map(function (item) {\n        return React.createElement(Menu.Item, {\n          key: item.id,\n          style: {\n            height: '70px',\n            marginTop: '0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          size: 50,\n          src: qoobee,\n          style: {\n            margin: '10px 5px 10px 5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"nav-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, item.chatName), React.createElement(\"p\", {\n          className: \"preview\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"n\\xE0 n\\xEDn\\xE0 n\\xEDn\\xE0 n\\xEDn\\xE0 n\\xEDn\\xE0 n\\xEDn\\xE0 n\\xEDn\\xE0 n\\xED\"), React.createElement(\"div\", {\n          className: \"dot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      });\n      return menuItems;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      //after get socket state\n      var phone = JSON.parse(localStorage.getItem('user')).phone;\n      var request = {\n        messageType: \"loadConversations\",\n        content: {\n          phone: phone\n        } // nextProps.websocket.send(JSON.stringify(request));\n        //load conversations\n\n      };\n\n      if (nextProps.conversationsList != null) {\n        console.log(nextProps.conversationsList);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        style: {\n          height: '100%',\n          width: '100%',\n          display: this.props.conversationDisplay,\n          overflow: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"conversations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        theme: \"light\",\n        mode: \"inline\",\n        onClick: this.showMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.showConversations())));\n    }\n  }]);\n\n  return Conversations;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    websocket: state.socketReducer.websocket,\n    conversationsList: state.chatReducer.conversationList\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    FetchChatId: function FetchChatId(conversationId) {\n      return dispatch(ChatActions.fetch_ConversationID(conversationId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Conversations);","map":{"version":3,"sources":["/home/lap11105-local/Documents/My repos/Id_1/app-design/src/components/Conversations/Conversations.js"],"names":["React","Component","Layout","Menu","Avatar","qoobee","ChatActions","connect","Conversations","props","showMessage","chat","FetchChatId","key","state","ConversationsMap","id","chatName","menuItems","map","item","height","marginTop","margin","nextProps","nextContext","phone","JSON","parse","localStorage","getItem","request","messageType","content","conversationsList","console","log","width","display","conversationDisplay","overflow","showConversations","mapStateToProps","websocket","socketReducer","chatReducer","conversationList","mapDispatchToProps","dispatch","conversationId","fetch_ConversationID"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAmC,MAAnC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,0CAAP;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;;AADe,UAuBnBC,WAvBmB,GAuBP,UAACC,IAAD,EAAQ;AAChB;AACF,YAAKF,KAAL,CAAWG,WAAX,CAAuBD,IAAI,CAACE,GAA5B;AACD,KA1BkB;;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAC,CACb;AAAIC,QAAAA,EAAE,EAAC,GAAP;AACIC,QAAAA,QAAQ,EAAC;AADb,OADa,EAIb;AACID,QAAAA,EAAE,EAAC,GADP;AAEIC,QAAAA,QAAQ,EAAC;AAFb,OAJa,EAQb;AACID,QAAAA,EAAE,EAAC,GADP;AAEIC,QAAAA,QAAQ,EAAC;AAFb,OARa,EAYb;AACID,QAAAA,EAAE,EAAC,IADP;AAEIC,QAAAA,QAAQ,EAAC;AAFb,OAZa;AADR,KAAb;AAFe;AAqBlB;;;;wCAOkB;AACf,UAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWC,gBAAX,CAA4BI,GAA5B,CAAgC,UAACC,IAAD;AAAA,eAC9C,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEA,IAAI,CAACJ,EAArB;AAAyB,UAAA,KAAK,EAAE;AAACK,YAAAA,MAAM,EAAC,MAAR;AAAeC,YAAAA,SAAS,EAAC;AAAzB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAS,UAAA,IAAI,EAAE,EAAf;AAAmB,UAAA,GAAG,EAAEjB,MAAxB;AAAgC,UAAA,KAAK,EAAE;AAACkB,YAAAA,MAAM,EAAC;AAAR,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBH,IAAI,CAACH,QAA9B,CAFJ,EAGI;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAHJ,EAII;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,CAD8C;AAAA,OAAhC,CAAlB;AAQA,aAAOC,SAAP;AACH;;;8CAEyBM,S,EAAWC,W,EAAa;AAC9C;AACA,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCJ,KAArD;AACA,UAAIK,OAAO,GAAI;AACXC,QAAAA,WAAW,EAAE,mBADF;AAEXC,QAAAA,OAAO,EAAC;AACJP,UAAAA,KAAK,EAAEA;AADH,SAFG,CAMf;AAEA;;AARe,OAAf;;AASA,UAAGF,SAAS,CAACU,iBAAV,IAA+B,IAAlC,EAAuC;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAS,CAACU,iBAAtB;AACH;AAEJ;;;6BAEQ;AACL,aACQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AACVb,UAAAA,MAAM,EAAE,MADE;AACKgB,UAAAA,KAAK,EAAC,MADX;AACmBC,UAAAA,OAAO,EAAC,KAAK7B,KAAL,CAAW8B,mBADtC;AAC2DC,UAAAA,QAAQ,EAAE;AADrE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAM,QAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,QAAzB;AAAmC,QAAA,OAAO,EAAE,KAAK9B,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK+B,iBAAL,EADL,CADJ,CAJJ,CADR;AAYH;;;;EAxEuBxC,S;;AA0E5B,IAAMyC,eAAe,GAAG,SAAlBA,eAAkB,CAAC5B,KAAD,EAAW;AAC/B,SAAO;AACH6B,IAAAA,SAAS,EAAE7B,KAAK,CAAC8B,aAAN,CAAoBD,SAD5B;AAEHT,IAAAA,iBAAiB,EAACpB,KAAK,CAAC+B,WAAN,CAAkBC;AAFjC,GAAP;AAIH,CALD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtCpC,IAAAA,WAAW,EAAE,qBAACqC,cAAD;AAAA,aAAoBD,QAAQ,CAAC1C,WAAW,CAAC4C,oBAAZ,CAAiCD,cAAjC,CAAD,CAA5B;AAAA;AADyB,GAAf;AAAA,CAA3B;;AAGA,eAAe1C,OAAO,CAClBmC,eADkB,EAElBK,kBAFkB,CAAP,CAGbvC,aAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Layout, Menu, Avatar} from 'antd';\nimport qoobee from \"../../images/qoobee.jpg\";\nimport '../../css/Conversations/conversation.css';\nimport {ChatActions} from \"../../Redux/Actions/ChatActions\";\nimport { connect } from 'react-redux';\n\nclass Conversations extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            ConversationsMap:[\n                {   id:\"1\",\n                    chatName:\"Tâm sự với em\"\n                },\n                {\n                    id:\"3\",\n                    chatName:\"Hội yêu cún\"\n                },\n                {\n                    id:\"8\",\n                    chatName:\"Hội yêu mèo\"\n                },\n                {\n                    id:\"11\",\n                    chatName:\"Bộ tộc Golden\"\n                },\n            ]\n        }\n    }\n\n    showMessage=(chat)=>{\n        // alert(chat.key);\n      this.props.FetchChatId(chat.key);\n    };\n\n    showConversations(){\n        const menuItems = this.state.ConversationsMap.map((item)=>\n            <Menu.Item key={item.id} style={{height:'70px',marginTop:'0' }} >\n                <Avatar  size={50} src={qoobee} style={{margin:'10px 5px 10px 5px'}}/>\n                <p className=\"nav-text\">{item.chatName}</p>\n                <p className=\"preview\">nà nínà nínà nínà nínà nínà nínà ní</p>\n                <div className=\"dot\"></div>\n            </Menu.Item>\n        );\n        return menuItems;\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        //after get socket state\n        let phone = JSON.parse(localStorage.getItem('user')).phone;\n        let request =  {\n            messageType: \"loadConversations\",\n            content:{\n                phone: phone,\n            }\n        }\n        // nextProps.websocket.send(JSON.stringify(request));\n\n        //load conversations\n        if(nextProps.conversationsList != null){\n            console.log(nextProps.conversationsList)\n        }\n\n    }\n\n    render() {\n        return (\n                <Layout style={{\n                     height: '100%',width:'100%', display:this.props.conversationDisplay, overflow: 'auto'\n                }}\n                >\n                    <div  id=\"conversations\">\n                        <Menu theme=\"light\" mode=\"inline\"  onClick={this.showMessage}>\n                            {this.showConversations()}\n                        </Menu>\n                    </div>\n                </Layout>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        websocket: state.socketReducer.websocket,\n        conversationsList:state.chatReducer.conversationList,\n    }\n}\nconst mapDispatchToProps = (dispatch) => ({\n    FetchChatId: (conversationId) => dispatch(ChatActions.fetch_ConversationID(conversationId)),\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Conversations);"]},"metadata":{},"sourceType":"module"}